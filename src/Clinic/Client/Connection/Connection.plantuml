@startuml

title __CONNECTION's Class Diagram__\n

  namespace Clinic.Client {
    namespace Connection {
      abstract class Clinic.Client.Connection.AbstractClient {
          - clientReader : Thread
          - clientSocket : Socket
          - host : String
          - input : ObjectInputStream
          - output : ObjectOutputStream
          - port : int
          - readyToStop : boolean
          + AbstractClient()
          + closeConnection()
          + getHost()
          + getInetAddress()
          + getPort()
          + isConnected()
          + openConnection()
          + run()
          + sendToServer()
          + setHost()
          + setPort()
          # connectionClosed()
          # connectionEstablished()
          # connectionException()
          {abstract} # handleMessageFromServer()
          - closeAll()
      }
    }
  }
  

  namespace Clinic.Client {
    namespace Connection {
      class Clinic.Client.Connection.AdaptableClient {
          + AdaptableClient()
          # connectionClosed()
          # connectionEstablished()
          # connectionException()
          # handleMessageFromServer()
      }
    }
  }
  

  namespace Clinic.Client {
    namespace Connection {
      class Clinic.Client.Connection.MyClient {
          + MyClient()
          + sendMessageToServer()
          # handleMessageFromServer()
      }
    }
  }
  

  namespace Clinic.Client {
    namespace Connection {
      class Clinic.Client.Connection.ObservableClient {
          {static} + CONNECTION_CLOSED : String
          {static} + CONNECTION_ESTABLISHED : String
          + ObservableClient()
          + closeConnection()
          + getHost()
          + getInetAddress()
          + getPort()
          + isConnected()
          + openConnection()
          + sendToServer()
          + setHost()
          + setPort()
          # connectionClosed()
          # connectionEstablished()
          # connectionException()
          # handleMessageFromServer()
      }
    }
  }
  

  namespace Clinic.Client {
    namespace Connection {
      class Clinic.Client.Connection.ObservableSWRClient {
          {static} + WAITING_FOR_REPLY : String
          - cancelled : boolean
          - exception : Exception
          - expected : ArrayList
          - received : Object
          - waitTime : int
          + ObservableSWRClient()
          + cancel()
          + connectAndWait()
          + isCancelled()
          + sendAndWaitForReply()
          + sendAndWaitForReply()
          + setWaitTime()
          # connectionClosed()
          # connectionEstablished()
          # connectionException()
          # handleMessageFromServer()
          - clearAll()
          - notify()
          - receive()
      }
    }
  }
  

  Clinic.Client.Connection.AbstractClient .up.|> java.lang.Runnable
  Clinic.Client.Connection.AdaptableClient -up-|> Clinic.Client.Connection.AbstractClient
  Clinic.Client.Connection.AdaptableClient o-- Clinic.Client.Connection.ObservableClient : client
  Clinic.Client.Connection.MyClient -up-|> Clinic.Client.Connection.AbstractClient
  Clinic.Client.Connection.MyClient o-- Clinic.Client.ClientSecretary : secretary
  Clinic.Client.Connection.ObservableClient -up-|> java.util.Observable
  Clinic.Client.Connection.ObservableClient o-- Clinic.Client.Connection.AdaptableClient : service
  Clinic.Client.Connection.ObservableSWRClient -up-|> Clinic.Client.Connection.ObservableClient


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
